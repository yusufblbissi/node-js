// Import necessary packages
import express from 'express';
import multer from 'multer';
import sharp from 'sharp';
import mongoose from 'mongoose';

// Create an instance of the Express router
const router = express.Router();

// Set up Multer for handling file uploads
const upload = multer({
  dest: 'uploads/', // Specify the destination folder for uploaded files
});

// Create a Mongoose model for storing image data in MongoDB
const Image = mongoose.model('Image', {
  filename: String,
  originalName: String,
});

// Route for handling image upload
router.post('/upload', upload.single('image'), async (req, res) => {
  try {
    // Get the uploaded file
    const file = req.file;

    // Resize the image using Sharp
    const resizedImage = await sharp(file.path)
      .resize({ width: 300, height: 300 })
      .toBuffer();

    // Save the resized image to MongoDB
    const savedImage = await Image.create({
      filename: file.filename,
      originalName: file.originalname,
      data: resizedImage,
    });

    res.status(200).json({ message: 'Image uploaded successfully', image: savedImage });
  } catch (error) {
    console.error(error);
    res.status(500).json({ error: 'Failed to upload image' });
  }
});

// Other routes and middleware...

// Export the router
export default router;
In the above example, the /upload route handles the image upload. It uses the upload.single('image') middleware to handle a single file upload with the field name 'image'. The uploaded file is then resized using sharp and saved to MongoDB using the Image model.

Make sure you have MongoDB set up and connected in your application. Adjust the destination folder, Mongoose model, and resize dimensions according to your requirements.

Note: The code provided is using ES6 syntax with module imports. If you are running an older version of Node.js that does not support ES modules, you can modify the imports and exports accordingly.

Remember to install the required packages by running the following command:

bash
Copy code
npm install express multer sharp mongoose



///// security package
//CSRF
//express-bouncer
//express-rate-limit
//helmet
//cors
//morgan
//express-validator
//express-async-errors
//express-fileupload
//express-session
//passport
//passport-local
//passport-local-mongoose
//passport-google-oauth20
//passport-facebook
//passport-github
//passport-twitter
//passport-google-oauth2
//passport-linkedin
//passport-bitbucket
//passport-instagram
//passport-vk
//passport-weibo
//passport-yahoo
//passport-openid
//passport-oauth2
//passport-oauth
//passport-oauth2
//passport-openidconnect
//passport-saml
//passport-oauth



// {

//     "email":"yousefbalbissi@gmail.com",
//     "password":"123456789"

// }